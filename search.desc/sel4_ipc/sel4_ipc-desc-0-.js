searchState.loadedDescShard("sel4_ipc", 0, "This crate implements the IPC mechanism of seL4, including …\nThe state of an endpoint\nThe state of a notification\nThe trait for IPC transfer, please see doc.md for more …\nUnimock mock API for Transfer.\nSet the notification to active\nBind the tcb to the notification\nCancel all signal in the notification\nCancel all IPC in the endpoint\nCancel badged sends in the endpoint, and set the tcb to …\nCancel the IPC of thread\nCancel the IPC of the tcb in the endpoint, and set the tcb …\nCancel the signal of the tcb in the notification\nExamples\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet the raw pointer(usize) to the endpoint\nGet the raw pointer of the notification\nGet the tcb queue of the queue\nGet the tcb queue of the notification\nGet the state of the endpoint\nGet the state of the notification\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReceive an IPC from the endpoint, if the endpoint is idle …\nReceive a signal from the notification. 1: If the …\nSafely unbind the tcb to the notification\nSend an IPC to the endpoint, if the endpoint is idle or …\nSend a signal to the notification. 1: If the notification …\nSet the tcb queue to the queue\nSet the tcb queue to the notification\nExamples\nExamples\nUnbind the tcb to the notification\nMockFn for <code>Transfer::cancel_ipc()</code>.\nMockFn for <code>Transfer::complete_signal() -&gt; bool</code>.\nMockFn for …\nMockFn for …\nMockFn for …\nMockFn for …\nMockFn for …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMockFn for …\nMockFn for …")